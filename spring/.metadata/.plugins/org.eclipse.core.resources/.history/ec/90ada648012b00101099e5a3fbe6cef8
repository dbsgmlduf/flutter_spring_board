package com.example.controller;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.content;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;
import org.springframework.web.context.WebApplicationContext;

import com.example.model.BoardVO;
import com.fasterxml.jackson.databind.ObjectMapper;

@RunWith(SpringJUnit4ClassRunner.class)
@WebAppConfiguration
@ContextConfiguration(locations = {
    "file:src/main/webapp/WEB-INF/spring/root-context.xml",
    "file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml"
})
public class BoardControllerTests {

    private static final Logger logger = LoggerFactory.getLogger(BoardControllerTests.class);

    @Autowired
    private WebApplicationContext ctx;

    private MockMvc mockMvc;
    private ObjectMapper objectMapper;

    @Before
    public void setup() {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(ctx).build();
        this.objectMapper = new ObjectMapper();
        logger.info("MockMvc setup completed");
    }

    @Test
    public void testEnroll() throws Exception {
        logger.info("Starting testEnroll test");
        
        // 테스트용 BoardVO 객체 생성
        BoardVO board = new BoardVO();
        board.setTitle("테스트 제목1");
        board.setContent("테스트 내1");
        board.setWriter("테스트 작성자1");

        // 객체를 JSON 문자열로 변환
        String jsonContent = objectMapper.writeValueAsString(board);
        logger.info("Request JSON: {}", jsonContent);

        // POST 요청 테스트
        mockMvc.perform(post("/api/board/enroll")
                .contentType(MediaType.APPLICATION_JSON)
                .content(jsonContent))
                .andExpect(status().isCreated())
                .andExpect(content().string("게시글 등록 성공"));
        
        logger.info("testEnroll test completed successfully");
    }
} 